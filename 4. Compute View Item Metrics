-- Use this table to
-- compute view_binary for the 30 day window after the test_start_date
-- for the test named item_test_2
SELECT
test_assignment,
COUNT(item_id) AS items,
SUM(view_binary_30d) AS viewed_items,
CAST(100*SUM(view_binary_30d)/COUNT(item_id) AS FLOAT) AS viewed_percent,
SUM(views) AS views,
SUM(views)/COUNT(item_id) AS average_views_per_item
FROM
(
 SELECT
   fa.test_assignment,
   fa.item_id,
   MAX(CASE WHEN views.event_time > fa.test_start_date THEN 1 ELSE 0 END)  AS view_binary_30d,
   COUNT(views.event_id) AS views
  FROM
    dsv1069.final_assignments fa

  LEFT OUTER JOIN
    (
    SELECT
      event_time,
      event_id,
      CAST(parameter_value AS INT) AS item_id
    FROM
      dsv1069.events
    WHERE
      event_name = 'view_item'
    AND
      parameter_name = 'item_id'
    ) views
  ON
    fa.item_id = views.item_id
  AND
    views.event_time >= fa.test_start_date
  AND
    DATE_PART('day', views.event_time - fa.test_start_date ) <= 30
  WHERE
    fa.test_number= 'item_test_2'
  GROUP BY
    fa.test_assignment,
    fa.item_id
) item_level
GROUP BY
 test_assignment
